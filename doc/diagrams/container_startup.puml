@startuml container_startup

activate Runtime
Runtime -> Runtime: Check and Mount container
create Trampoline
Runtime -> Trampoline: Fork
activate Trampoline
create Init
Trampoline -> Init: Fork
activate Init
Trampoline -> Runtime: Init PID
destroy Trampoline
Runtime -> Runtime: Wait for Trampoline exit (waitpid)
Init -> Init: Wait for run signal (Condition::wait)
Runtime -> Runtime: Configure cgroups
Runtime -> Init: Signal run (Condition::notify)
Runtime -> Runtime: Wait for execve (Condition::wait)
Init -> Init: Mount, Chroot, UID / GID,\ndrop privileges, file descriptors
create Container
Init -> Container: Fork
activate Container
Init -> Init: Wait for container to exit (waitpid)
Container -> Container: Set seccomp filter
Container -> : Execve(..)
Runtime -> Runtime: Condition pipe closed: Container is started
note left: Condition pipe is CLOEXEC
Container -> Init: Exit
destroy Container
Init -> Runtime: Exit
Runtime -> Runtime: Read exit status from pipe or waitpid on pid of init
destroy Init

@enduml
