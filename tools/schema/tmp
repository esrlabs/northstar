{
  "$schema": "https://spec.openapis.org/oas/3.0/schema/2019-04-02#/definitions/Schema",
  "title": "Message",
  "description": "Message",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "Connect"
      ],
      "properties": {
        "Connect": {
          "$ref": "#/components/schemas/Connect"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "Request"
      ],
      "properties": {
        "Request": {
          "$ref": "#/components/schemas/Request"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "Response"
      ],
      "properties": {
        "Response": {
          "$ref": "#/components/schemas/Response"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "Notification"
      ],
      "properties": {
        "Notification": {
          "$ref": "#/components/schemas/Notification"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Autostart": {
      "description": "Autostart options",
      "type": "string",
      "enum": [
        "relaxed",
        "critical"
      ]
    },
    "CGroups": {
      "description": "CGroups configuration",
      "type": "object",
      "required": [
        "blkio",
        "cpu",
        "memory"
      ],
      "properties": {
        "blkio": {
          "description": "BlkIo controller",
          "type": "string"
        },
        "cpu": {
          "description": "Cpu controller",
          "type": "string"
        },
        "memory": {
          "description": "Memory controller",
          "type": "string"
        }
      }
    },
    "Capability": {
      "description": "Linux capability",
      "type": "string",
      "enum": [
        "CAP_CHOWN",
        "CAP_DAC_OVERRIDE",
        "CAP_DAC_READ_SEARCH",
        "CAP_FOWNER",
        "CAP_FSETID",
        "CAP_KILL",
        "CAP_SETGID",
        "CAP_SETUID",
        "CAP_SETPCAP",
        "CAP_LINUX_IMMUTABLE",
        "CAP_NET_BIND_SERVICE",
        "CAP_NET_BROADCAST",
        "CAP_NET_ADMIN",
        "CAP_NET_RAW",
        "CAP_IPC_LOCK",
        "CAP_IPC_OWNER",
        "CAP_SYS_MODULE",
        "CAP_SYS_RAWIO",
        "CAP_SYS_CHROOT",
        "CAP_SYS_PTRACE",
        "CAP_SYS_PACCT",
        "CAP_SYS_ADMIN",
        "CAP_SYS_BOOT",
        "CAP_SYS_NICE",
        "CAP_SYS_RESOURCE",
        "CAP_SYS_TIME",
        "CAP_SYS_TTY_CONFIG",
        "CAP_MKNOD",
        "CAP_LEASE",
        "CAP_AUDIT_WRITE",
        "CAP_AUDIT_CONTROL",
        "CAP_SETFCAP",
        "CAP_MAC_OVERRIDE",
        "CAP_MAC_ADMIN",
        "CAP_SYSLOG",
        "CAP_WAKE_ALARM",
        "CAP_BLOCK_SUSPEND",
        "CAP_AUDIT_READ",
        "CAP_PERFMON",
        "CAP_BPF",
        "CAP_CHECKPOINT_RESTORE"
      ]
    },
    "CgroupNotification": {
      "description": "Cgroup event",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Memory"
          ],
          "properties": {
            "Memory": {
              "$ref": "#/components/schemas/MemoryNotification"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Connect": {
      "description": "Connect meta information",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "ConnectAck"
          ]
        },
        {
          "type": "object",
          "required": [
            "Connect"
          ],
          "properties": {
            "Connect": {
              "type": "object",
              "required": [
                "subscribe_notifications",
                "version"
              ],
              "properties": {
                "subscribe_notifications": {
                  "description": "Subscribe this connection to notifications",
                  "type": "boolean"
                },
                "version": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "ConnectNack"
          ],
          "properties": {
            "ConnectNack": {
              "$ref": "#/components/schemas/ConnectNack"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ConnectNack": {
      "description": "Connection nack",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "InvalidProtocolVersion"
          ],
          "properties": {
            "InvalidProtocolVersion": {
              "$ref": "#/components/schemas/Version"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Container": {
      "description": "Container identification",
      "type": "object",
      "required": [
        "name",
        "version"
      ],
      "properties": {
        "name": {
          "$ref": "#/components/schemas/Name"
        },
        "version": {
          "$ref": "#/components/schemas/Version"
        }
      }
    },
    "ContainerData": {
      "description": "Container information",
      "type": "object",
      "required": [
        "container",
        "manifest",
        "mounted",
        "repository"
      ],
      "properties": {
        "container": {
          "description": "Container name and version",
          "allOf": [
            {
              "$ref": "#/components/schemas/Container"
            }
          ]
        },
        "manifest": {
          "description": "Container manifest",
          "allOf": [
            {
              "$ref": "#/components/schemas/Manifest"
            }
          ]
        },
        "mounted": {
          "description": "Mount state",
          "type": "boolean"
        },
        "process": {
          "description": "Process if the container is started",
          "allOf": [
            {
              "$ref": "#/components/schemas/Process"
            }
          ],
          "nullable": true
        },
        "repository": {
          "description": "Repository in which the container is installed",
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "API error",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Configuration"
          ],
          "properties": {
            "Configuration": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "DuplicateContainer"
          ],
          "properties": {
            "DuplicateContainer": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "InvalidContainer"
          ],
          "properties": {
            "InvalidContainer": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "InvalidArguments"
          ],
          "properties": {
            "InvalidArguments": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "MountBusy"
          ],
          "properties": {
            "MountBusy": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "UmountBusy"
          ],
          "properties": {
            "UmountBusy": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "StartContainerStarted"
          ],
          "properties": {
            "StartContainerStarted": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "StartContainerResource"
          ],
          "properties": {
            "StartContainerResource": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "StartContainerMissingResource"
          ],
          "properties": {
            "StartContainerMissingResource": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Container"
                },
                {
                  "$ref": "#/components/schemas/Container"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "StartContainerFailed"
          ],
          "properties": {
            "StartContainerFailed": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Container"
                },
                {
                  "type": "string"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "StopContainerNotStarted"
          ],
          "properties": {
            "StopContainerNotStarted": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "InvalidRepository"
          ],
          "properties": {
            "InvalidRepository": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "InstallDuplicate"
          ],
          "properties": {
            "InstallDuplicate": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "CriticalContainer"
          ],
          "properties": {
            "CriticalContainer": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Container"
                },
                {
                  "$ref": "#/components/schemas/ExitStatus"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Npk"
          ],
          "properties": {
            "Npk": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Process"
          ],
          "properties": {
            "Process": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Console"
          ],
          "properties": {
            "Console": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Cgroups"
          ],
          "properties": {
            "Cgroups": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Mount"
          ],
          "properties": {
            "Mount": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Seccomp"
          ],
          "properties": {
            "Seccomp": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Name"
          ],
          "properties": {
            "Name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Key"
          ],
          "properties": {
            "Key": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Unexpected"
          ],
          "properties": {
            "Unexpected": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ExitStatus": {
      "description": "Container exit status",
      "oneOf": [
        {
          "description": "Process exited with exit code",
          "type": "object",
          "required": [
            "Exit"
          ],
          "properties": {
            "Exit": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Process was terminated by a signal",
          "type": "object",
          "required": [
            "Signaled"
          ],
          "properties": {
            "Signaled": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Io": {
      "description": "IO configuration for stdin, stdout, stderr",
      "type": "object",
      "properties": {
        "stderr": {
          "description": "stderr configuration",
          "allOf": [
            {
              "$ref": "#/components/schemas/Output"
            }
          ],
          "nullable": true
        },
        "stdout": {
          "description": "stdout configuration",
          "allOf": [
            {
              "$ref": "#/components/schemas/Output"
            }
          ],
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "Level": {
      "description": "Log level",
      "type": "string",
      "enum": [
        "error",
        "warn",
        "info",
        "debug",
        "trace"
      ]
    },
    "Manifest": {
      "description": "Northstar package manifest",
      "type": "object",
      "required": [
        "gid",
        "name",
        "uid",
        "version"
      ],
      "properties": {
        "args": {
          "description": "Additional arguments for the application invocation",
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/NonNullString"
          },
          "nullable": true
        },
        "autostart": {
          "description": "Autostart this container upon northstar startup",
          "allOf": [
            {
              "$ref": "#/components/schemas/Autostart"
            }
          ],
          "nullable": true
        },
        "capabilities": {
          "description": "Capabilities",
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Capability"
          },
          "uniqueItems": true,
          "nullable": true
        },
        "cgroups": {
          "description": "CGroup config",
          "allOf": [
            {
              "$ref": "#/components/schemas/CGroups"
            }
          ],
          "nullable": true
        },
        "console": {
          "description": "Pass a console fd number in NORTHSTAR_CONSOLE",
          "default": false,
          "type": "boolean"
        },
        "custom": {
          "description": "Optional custom data. The runtime doesnt use this.",
          "nullable": true
        },
        "env": {
          "description": "Environment passed to container",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/NonNullString"
          },
          "nullable": true
        },
        "gid": {
          "description": "GID",
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "init": {
          "description": "Path to init",
          "type": "string",
          "nullable": true
        },
        "io": {
          "description": "IO configuration",
          "allOf": [
            {
              "$ref": "#/components/schemas/Io"
            }
          ],
          "nullable": true
        },
        "mounts": {
          "description": "List of bind mounts and resources",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Mount"
          }
        },
        "name": {
          "description": "Name of container",
          "allOf": [
            {
              "$ref": "#/components/schemas/Name"
            }
          ]
        },
        "rlimits": {
          "description": "Resource limits",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/RLimitValue"
          },
          "nullable": true
        },
        "seccomp": {
          "description": "Seccomp configuration",
          "allOf": [
            {
              "$ref": "#/components/schemas/Seccomp"
            }
          ],
          "nullable": true
        },
        "suppl_groups": {
          "description": "String containing group names to give to new container",
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/NonNullString"
          },
          "nullable": true
        },
        "uid": {
          "description": "UID",
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "version": {
          "description": "Container version",
          "allOf": [
            {
              "$ref": "#/components/schemas/Version"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "MemoryNotification": {
      "description": "CGroup memory event data",
      "type": "object",
      "properties": {
        "high": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        },
        "low": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        },
        "max": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        },
        "oom": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        },
        "oom_kill": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        }
      }
    },
    "Mount": {
      "description": "Mounts",
      "oneOf": [
        {
          "description": "Bind mount of a host dir with options",
          "type": "object",
          "required": [
            "host",
            "type"
          ],
          "properties": {
            "host": {
              "description": "Path in the host filesystem",
              "type": "string"
            },
            "options": {
              "description": "Mount options",
              "allOf": [
                {
                  "$ref": "#/components/schemas/MountOptions"
                }
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "bind"
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Use a minimal dev tree",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "dev"
              ]
            }
          }
        },
        {
          "description": "Mount a rw host directory dedicated to this container rw",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "persist"
              ]
            }
          }
        },
        {
          "description": "Mount proc",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "proc"
              ]
            }
          }
        },
        {
          "description": "Mount a directory from a resource",
          "type": "object",
          "required": [
            "dir",
            "name",
            "type",
            "version"
          ],
          "properties": {
            "dir": {
              "description": "Directory within the resource container",
              "type": "string"
            },
            "name": {
              "description": "Name of the resource container",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Name"
                }
              ]
            },
            "options": {
              "description": "Mount options",
              "allOf": [
                {
                  "$ref": "#/components/schemas/MountOptions"
                }
              ]
            },
            "type": {
              "type": "string",
              "enum": [
                "resource"
              ]
            },
            "version": {
              "description": "Version of the resource container",
              "allOf": [
                {
                  "$ref": "#/components/schemas/Version"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Mount a tmpfs with size",
          "type": "object",
          "required": [
            "size",
            "type"
          ],
          "properties": {
            "size": {
              "description": "Size in bytes",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "type": {
              "type": "string",
              "enum": [
                "tmpfs"
              ]
            }
          }
        }
      ]
    },
    "MountOption": {
      "description": "Mount option",
      "type": "string",
      "enum": [
        "rw",
        "noexec",
        "nosuid",
        "nodev",
        "rec"
      ]
    },
    "MountOptions": {
      "description": "Mount option set",
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/MountOption"
      },
      "uniqueItems": true
    },
    "MountResult": {
      "description": "Result of a mount operation",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Ok"
          ],
          "properties": {
            "Ok": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Err"
          ],
          "properties": {
            "Err": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Container"
                },
                {
                  "$ref": "#/components/schemas/Error"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Name": {
      "description": "Name of a container",
      "type": "string"
    },
    "NonNullString": {
      "description": "String that does not contain null bytes",
      "type": "string"
    },
    "Notification": {
      "description": "Notification / Event",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "Shutdown"
          ]
        },
        {
          "type": "object",
          "required": [
            "Started"
          ],
          "properties": {
            "Started": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Exit"
          ],
          "properties": {
            "Exit": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Container"
                },
                {
                  "$ref": "#/components/schemas/ExitStatus"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Install"
          ],
          "properties": {
            "Install": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Uninstall"
          ],
          "properties": {
            "Uninstall": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "CGroup"
          ],
          "properties": {
            "CGroup": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Container"
                },
                {
                  "$ref": "#/components/schemas/CgroupNotification"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Output": {
      "description": "Io redirection for stdout/stderr",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "pipe"
          ]
        },
        {
          "description": "Forward output to the logging system with level and optional tag",
          "type": "object",
          "required": [
            "log"
          ],
          "properties": {
            "log": {
              "type": "object",
              "required": [
                "level",
                "tag"
              ],
              "properties": {
                "level": {
                  "description": "Level",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Level"
                    }
                  ]
                },
                "tag": {
                  "description": "Tag",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Process": {
      "description": "Process information",
      "type": "object",
      "required": [
        "pid",
        "uptime"
      ],
      "properties": {
        "pid": {
          "description": "Process id",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "uptime": {
          "description": "Process uptime in nanoseconds",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "Profile": {
      "description": "Predefined seccomp profile",
      "type": "string",
      "enum": [
        "default"
      ]
    },
    "RLimitValue": {
      "description": "Value for a rlimit setting",
      "type": "object",
      "properties": {
        "hard": {
          "description": "Hard limit value for resource. None indicates `unlimited`.",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        },
        "soft": {
          "description": "Soft limit value for resource. None indicates `unlimited`.",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        }
      }
    },
    "Request": {
      "description": "Request",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "Containers",
            "Repositories",
            "Shutdown"
          ]
        },
        {
          "type": "object",
          "required": [
            "Install"
          ],
          "properties": {
            "Install": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Mount"
          ],
          "properties": {
            "Mount": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Container"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Start"
          ],
          "properties": {
            "Start": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Container"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NonNullString"
                  },
                  "nullable": true
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/NonNullString"
                  },
                  "nullable": true
                }
              ],
              "maxItems": 3,
              "minItems": 3
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Kill"
          ],
          "properties": {
            "Kill": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Container"
                },
                {
                  "type": "integer",
                  "format": "int32"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Umount"
          ],
          "properties": {
            "Umount": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Uninstall"
          ],
          "properties": {
            "Uninstall": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "ContainerStats"
          ],
          "properties": {
            "ContainerStats": {
              "$ref": "#/components/schemas/Container"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Response": {
      "description": "Response",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "Ok"
          ],
          "properties": {
            "Ok": {
              "type": "null"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Containers"
          ],
          "properties": {
            "Containers": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ContainerData"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Repositories"
          ],
          "properties": {
            "Repositories": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Mount"
          ],
          "properties": {
            "Mount": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MountResult"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "ContainerStats"
          ],
          "properties": {
            "ContainerStats": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/components/schemas/Container"
                },
                {
                  "type": "object",
                  "additionalProperties": true
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Err"
          ],
          "properties": {
            "Err": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Seccomp": {
      "description": "Seccomp configuration",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Explicit list of allowed syscalls",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/SyscallRule"
          },
          "nullable": true
        },
        "profile": {
          "description": "Pre-defined seccomp profile",
          "allOf": [
            {
              "$ref": "#/components/schemas/Profile"
            }
          ],
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "SyscallArgRule": {
      "description": "Syscall argument rule",
      "type": "object",
      "required": [
        "index"
      ],
      "properties": {
        "index": {
          "description": "Index of syscall argument",
          "type": "integer",
          "format": "uint",
          "minimum": 0.0
        },
        "mask": {
          "description": "Bitmask of syscall argument",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0,
          "nullable": true
        },
        "values": {
          "description": "Value of syscall argument",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "SyscallRule": {
      "description": "Syscall rule",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "any"
          ]
        },
        {
          "description": "Explicit list of allowed syscalls arguments",
          "type": "object",
          "required": [
            "args"
          ],
          "properties": {
            "args": {
              "$ref": "#/components/schemas/SyscallArgRule"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Version": {
      "description": "Container version",
      "type": "object",
      "required": [
        "major",
        "minor",
        "patch"
      ],
      "properties": {
        "major": {
          "description": "Major",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "minor": {
          "description": "Minor",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "patch": {
          "description": "Patch",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    }
  }
}